'use strict';
//
//
$(function () { // Эта строка говорит, что сначало должен загрузится html-код (DOM элементов), и только потом js-код.
    //
    //
    // -#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
    // -#- Фиксация основного навигационного меню (nav) при скролле вниз -#-
    // -#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
    //
    // Сохраняем селектор элемента (#header) в переменную header.
    var header = $("#header");
    /* Значение высоты секции intro (кол-во пикселей) сохраняется в переменной introH. */
    var introH = $("#intro").innerHeight();
    /* scrollOffset - это отступ скролла, т.е. проскролленое кол-во пикселей.
    По дефолту значение равно текущему (проскроленному) скроллу страницы.
    При скролле, данное значение будет обновлятся (увеличиваться при скролле
    вниз и уменьшаться при скролле вверх). При перезагрузке страницы
    допустим в ее середине, scrollOffset не будет обнуляться, т.к. страница уже была
    проскролена ранее до ее перезагрузки. */
    var scrollOffset = $(this).scrollTop();
    /* Вызов функции checkScroll() сразу при загрузке страницы. */
    checkScroll(scrollOffset);
    /* Вызов функции checkScroll() по событию скролла страницы
    (scrollOffset пересчитывается при скролле). */
    $(window).on("scroll", function () { // Событие скролла.
        // Обновляем значение scrollOffset при скролле.
        scrollOffset = $(this).scrollTop();
        // Вызов функции checkScroll() при скролле страницы вниз/вверх.
        checkScroll(scrollOffset);
    });
    /* Функция проверки необходимости фиксации основного навигационного
     меню при скролле страницы вниз/вверх. */
    function checkScroll(scrollOffset) {
        /* Сравнение значений scrollOffset и introH. Если проскроленное кол-во
        пикселей scrollOffset больше (либо равно), чем introH (высота секции intro),
        то мы добавляем класс fixed к классу header. Иначе, мы удаляем класс fixed
        у класса header. */
        if (scrollOffset >= introH) {
            header.addClass("fixed"); // Добавляем класс fixed к классу header.
        } else {
            header.removeClass("fixed"); // Удаляем класс fixed у класса header.
        }
    }
});



